(()=>{var a=(t,e)=>{t.animate(e,{duration:500,easing:"ease-in-out",direction:"normal",fill:"forwards"})};var s=t=>(t.id||(t.id=`id-${Math.random().toString(36).substr(2,9)}`),t.id);var l=".footer__container",d=":scope .footer__card-grid .footer__block ",u=":scope .footer__title",f=":scope .footer__title + *",b=()=>{let t=document.querySelector(l),e=Array.from(t.querySelectorAll(d)).filter(o=>o.querySelector(u));e.length>0&&e.forEach(o=>E(o))},E=t=>{let e=t.querySelector(u),r=t.querySelector(f);t.classList.add("footer__collapsible"),e.setAttribute("role","button"),e.setAttribute("aria-expanded","false"),e.setAttribute("aria-controls",s(r)),r.setAttribute("aria-hidden","true");let o=()=>a(r,[{height:"0px"},{height:`${r.scrollHeight}px`}]),n=()=>a(r,[{height:`${r.scrollHeight}px`},{height:"0px"}]);e.addEventListener("click",()=>{let c=e.getAttribute("aria-expanded")==="true",i=r.getAttribute("aria-hidden")==="true";e.setAttribute("aria-expanded",!c),r.setAttribute("aria-hidden",!i),i?o():n()}),n()};b();})();
//# sourceMappingURL=data:application/json;base64,
