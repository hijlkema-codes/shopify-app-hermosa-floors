(()=>{var c=(e,t="generic",r=void 0,...a)=>{let s=e.querySelector("[data-errors]"),i=s.content.querySelector(`[data-error="${t}"]`);i||(i=s.content.querySelector("[data-error='generic']"));let q=i.cloneNode(!0);e.appendChild(q),e.setAttribute("aria-invalid","true"),r&&console.warn(r,...a)},p=e=>{e.querySelectorAll("[data-error]").forEach(r=>{r.remove()}),e.setAttribute("aria-invalid","false")};var f={parse_float:e=>parseFloat(e),parse_boolean:e=>["true","1","on","yes"].includes(e.toLowerCase()),to_string:e=>new Intl.NumberFormat(void 0,{currency:"EUR",style:"currency"}).format(e/100)},n=(e,t)=>t.reduce((r,a)=>f[a]?f[a](r):r,e);var u=(e,t)=>{let r=document.querySelector(`[data-value-target="${e}"]`);if(r)if(r.hasAttribute("data-value-target-attribute")){let a=r.getAttribute("data-value-target-attribute");r.setAttribute(a,t);return}else r.innerHTML=t},o=(e,t,r=[])=>{let a="";return e.hasAttribute(t)&&(a=e.getAttribute(t)),e.dataset[t]&&(a=e.dataset[t]),n(a,r)},h=(e,t=[])=>{let r="";return e.tagName==="INPUT"&&(r=e.value),n(r,t)},m=(e,t)=>{t.forEach(r=>{e.addEventListener(r.type,r.handler)})},d=(e,t=!0)=>{t?(e.setAttribute("disabled",!0),e.classList.add("loading"),e.setAttribute("aria-busy","true")):(e.removeAttribute("disabled"),e.classList.remove("loading"),e.setAttribute("aria-busy","false"))};var b=(e,t)=>Math.ceil(e*(1+t/100)),g=(e,t)=>Math.ceil(e/t);var y=async(e,t)=>(await fetch(window.Shopify.routes.root+"cart/add.js",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({items:[{id:e,quantity:t}]})})).json();var v="cart-drawer",E=()=>{let e=document.querySelector(v);e&&(e.update?.(),e.purchaseHandler?.(),e.open?.())};var S="package-calculator";var l=class extends HTMLElement{connectedCallback(){super.connectedCallback?.(),this.addEventListener("input",this.#t.bind(this)),m(this.querySelector("form"),[{type:"submit",handler:this.#r.bind(this)}])}#t(t){t.preventDefault(),this.setAttribute("aria-expanded","true");let r=t.target.valueAsNumber;if(!this.#s(r)){this.#o(1);return}let a=this.#a(r);this.#e(a)}async#r(t){t.preventDefault(),p(this);let r=h(this.querySelector('input[name="square_meters"]'),["parse_int"]),a=o(this,"productId"),s=o(this.querySelector('input[name="quantity"]'),"value",["parse_int"]);if(!r){c(this,"missing-fields","Surface area is required.",{squareMeters:r});return}if(!a){c(this,"generic","Product ID not found.");return}if(!s){c(this,"missing-fields","Quantity is required.",{quantity:s});return}d(this),await y(a,s),d(this,!1),E()}#a(t){return b(t,o(this,"cutoffPercentage",["parse_float"]))}#e(t){let r=o(this,"squareMetersPerPackage",["parse_float"]),a=o(this,"productPrice",["parse_float"]),s=g(t,r),i=n(s*a,["to_string"]);u("selected-packs",s),u("entered-surface-area",t),u("totals",i),u("quantity",s)}#s(t){return!(!t||isNaN(t)||t<1)}#o(t=1){let r=this.querySelector('input[name="square_meters"]');r.value=t,this.#e(t)}};customElements.get(S)||customElements.define(S,l);})();
//# sourceMappingURL=data:application/json;base64,
