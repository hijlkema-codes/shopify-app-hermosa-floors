(()=>{var c=(e,t="generic",r=void 0,...a)=>{let s=e.querySelector("[data-errors]"),o=s.content.querySelector(`[data-error="${t}"]`);o||(o=s.content.querySelector("[data-error='generic']"));let q=o.cloneNode(!0);e.appendChild(q),e.setAttribute("aria-invalid","true"),r&&console.warn(r,...a)},p=e=>{e.querySelectorAll("[data-error]").forEach(r=>{r.remove()}),e.setAttribute("aria-invalid","false")};var m={parse_float:e=>parseFloat(e),parse_boolean:e=>["true","1","on","yes"].includes(e.toLowerCase()),to_currency:e=>new Intl.NumberFormat(void 0,{currency:"EUR",style:"currency"}).format(e),to_currency_unsigned:e=>new Intl.NumberFormat(void 0,{currency:"EUR",style:"currency",currencyDisplay:"code"}).format(e).replace("EUR","").trim(),from_cents:e=>e/100},i=(e,t)=>t.reduce((r,a)=>m[a]?m[a](r):r,e);var u=(e,t)=>{let r=document.querySelector(`[data-value-target="${e}"]`);if(r)if(r.hasAttribute("data-value-target-attribute")){let a=r.getAttribute("data-value-target-attribute");r.setAttribute(a,t);return}else r.innerHTML=t},n=(e,t,r=[])=>{let a="";return e.hasAttribute(t)&&(a=e.getAttribute(t)),e.dataset[t]&&(a=e.dataset[t]),i(a,r)},h=(e,t=[])=>{let r="";return e.tagName==="INPUT"&&(r=e.value),i(r,t)},d=(e,t)=>{t.forEach(r=>{e.addEventListener(r.type,r.handler)})},l=(e,t=!0)=>{t?(e.setAttribute("disabled",!0),e.classList.add("loading"),e.setAttribute("aria-busy","true")):(e.removeAttribute("disabled"),e.classList.remove("loading"),e.setAttribute("aria-busy","false"))};var y=(e,t)=>Math.ceil(e*(1+t/100)),b=(e,t)=>Math.ceil(e/t);var g=async(e,t)=>(await fetch(window.Shopify.routes.root+"cart/add.js",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({items:[{id:e,quantity:t}]})})).json();var v="cart-drawer",E=()=>{let e=document.querySelector(v);e&&(e.update?.(),e.purchaseHandler?.(),e.open?.())};var S="package-calculator",f=class extends HTMLElement{connectedCallback(){super.connectedCallback?.(),d(this,[{type:"input",handler:this.#e.bind(this)}]),d(this.querySelector("form"),[{type:"submit",handler:this.#t.bind(this)}])}#e(t){t.preventDefault(),this.setAttribute("aria-expanded","true");let r=t.target.valueAsNumber;if(!this.#s(r)){this.#n(1);return}let a=this.#r(r);this.#a(a)}async#t(t){t.preventDefault(),p(this);let r=h(this.querySelector('input[name="square_meters"]'),["parse_int"]),a=n(this,"productId"),s=n(this.querySelector('input[name="quantity"]'),"value",["parse_int"]);if(!r){c(this,"missing-fields","Surface area is required.",{squareMeters:r});return}if(!a){c(this,"generic","Product ID not found.");return}if(!s){c(this,"missing-fields","Quantity is required.",{quantity:s});return}l(this),await g(a,s),l(this,!1),E()}#r(t){return y(t,n(this,"cutoffPercentage",["parse_float"]))}#a(t){let r=n(this,"squareMetersPerPackage",["parse_float"]),a=n(this,"productPrice",["parse_float","from_cents"]),s=b(t,r),o=i(s*a,[this.#o()]);u("selected-packs",s),u("entered-surface-area",t),u("totals",o),u("quantity",s)}#s(t){return!(!t||isNaN(t)||t<1)}#n(){this.setAttribute("aria-expanded","false")}#o(){return n(this,"showCurrency",["parse_boolean"])?"to_currency":"to_currency_unsigned"}};customElements.get(S)||customElements.define(S,f);})();
//# sourceMappingURL=data:application/json;base64,
